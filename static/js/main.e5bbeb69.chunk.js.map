{"version":3,"sources":["components/enums/SortType.tsx","components/Goods.tsx","components/Buttons.tsx","App.tsx","index.tsx"],"names":["SortType","Goods","goods","map","good","Buttons","sortBy","onReverse","sortType","isReversed","isShowResetButton","className","type","cn","Alphabet","onClick","Length","reversed","Default","goodsFromServer","App","useState","setSortType","setIsReversed","sortedGoods","preparedGoods","sort","good1","good2","length","localeCompare","reverse","getSortedGoods","ReactDOM","render","document","getElementById"],"mappings":"6KAAYA,E,0DCICC,EAAyB,SAAC,GAAD,IAAGC,EAAH,EAAGA,MAAH,OACpC,6BACGA,EAAMC,KAAI,SAAAC,GAAI,OACb,oBACE,UAAQ,OADV,SAIGA,GAFIA,S,0BDTDJ,K,oBAAAA,E,gBAAAA,E,YAAAA,M,KEWL,IAAMK,EAA2B,SAAC,GAKlC,IAJLC,EAII,EAJJA,OACAC,EAGI,EAHJA,UACAC,EAEI,EAFJA,SACAC,EACI,EADJA,WAEMC,EAAoBF,GAAYC,EAOtC,OACE,sBAAKE,UAAU,UAAf,UACE,wBACEC,KAAK,SACLD,UAAWE,IAAG,iBAAkB,CAC9B,WAAYL,IAAaR,EAASc,WAEpCC,QAAS,kBAAMT,EAAON,EAASc,WALjC,iCAUA,wBACEF,KAAK,SACLD,UAAWE,IAAG,oBAAqB,CACjC,WAAYL,IAAaR,EAASgB,SAEpCD,QAAS,kBAAMT,EAAON,EAASgB,SALjC,4BAUA,wBACEJ,KAAK,SACLD,UAAWE,IAAG,oBAAqB,CACjC,YAAaJ,IAEfM,QAAS,kBAAMR,GAAU,SAACU,GAAD,OAAwBA,MALnD,qBAUCP,GACC,wBACEE,KAAK,SACLD,UAAU,4BACVI,QAAS,kBAxCfT,EAAON,EAASkB,cAChBX,GAAU,IAoCN,uBClDKY,EAA4B,CACvC,YACA,SACA,OACA,YACA,QACA,QACA,OACA,QACA,MACA,UAoCWC,EAAgB,WAC3B,MAAgCC,mBAASrB,EAASkB,SAAlD,mBAAOV,EAAP,KAAiBc,EAAjB,KACA,EAAoCD,oBAAS,GAA7C,mBAAOZ,EAAP,KAAmBc,EAAnB,KAEMC,EAhCe,SACrBtB,EADqB,GAGjB,IADFM,EACC,EADDA,SAAUC,EACT,EADSA,WAENgB,EAAa,YAAOvB,GAqB1B,OAnBIM,GACFiB,EAAcC,MAAK,SAACC,EAAeC,GACjC,OAAQpB,GACN,KAAKR,EAASgB,OACZ,OAAOW,EAAME,OAASD,EAAMC,OAE9B,KAAK7B,EAASc,SACZ,OAAOa,EAAMG,cAAcF,GAE7B,QACE,OAAO,MAKXnB,GACFgB,EAAcM,UAGTN,EAOaO,CAClBb,EACA,CAAEX,WAAUC,eAGd,OACE,sBAAKE,UAAU,kBAAf,UACE,cAAC,EAAD,CACEL,OAAQgB,EACRf,UAAWgB,EACXf,SAAUA,EACVC,WAAYA,IAGd,cAAC,EAAD,CAAOP,MAAOsB,QCpEpBS,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.e5bbeb69.chunk.js","sourcesContent":["export enum SortType {\n  Alphabet = 'alphabet',\n  Length = 'length',\n  Default = '',\n}\n","type Props = {\n  goods: string[],\n};\n\nexport const Goods: React.FC<Props> = ({ goods }) => (\n  <ul>\n    {goods.map(good => (\n      <li\n        data-cy=\"Good\"\n        key={good}\n      >\n        {good}\n      </li>\n    ))}\n  </ul>\n);\n","import React from 'react';\nimport cn from 'classnames';\nimport { SortType } from './enums/SortType';\n\ntype Props = {\n  sortBy: React.Dispatch<React.SetStateAction<SortType>>,\n  onReverse: React.Dispatch<React.SetStateAction<boolean>>,\n  sortType: string,\n  isReversed: boolean,\n};\n\nexport const Buttons: React.FC<Props> = ({\n  sortBy,\n  onReverse,\n  sortType,\n  isReversed,\n}) => {\n  const isShowResetButton = sortType || isReversed;\n\n  const clearSortType = () => {\n    sortBy(SortType.Default);\n    onReverse(false);\n  };\n\n  return (\n    <div className=\"buttons\">\n      <button\n        type=\"button\"\n        className={cn('button is-info', {\n          'is-light': sortType !== SortType.Alphabet,\n        })}\n        onClick={() => sortBy(SortType.Alphabet)}\n      >\n        Sort alphabetically\n      </button>\n\n      <button\n        type=\"button\"\n        className={cn('button is-success', {\n          'is-light': sortType !== SortType.Length,\n        })}\n        onClick={() => sortBy(SortType.Length)}\n      >\n        Sort by length\n      </button>\n\n      <button\n        type=\"button\"\n        className={cn('button is-warning', {\n          'is-light': !isReversed,\n        })}\n        onClick={() => onReverse((reversed: boolean) => !reversed)}\n      >\n        Reverse\n      </button>\n\n      {isShowResetButton && (\n        <button\n          type=\"button\"\n          className=\"button is-danger is-light\"\n          onClick={() => clearSortType()}\n        >\n          Reset\n        </button>\n      )}\n\n    </div>\n  );\n};\n","import React, { useState } from 'react';\nimport 'bulma/css/bulma.css';\nimport './App.scss';\nimport { Goods } from './components/Goods';\nimport { Buttons } from './components/Buttons';\nimport { SortType } from './components/enums/SortType';\n\nexport const goodsFromServer: string[] = [\n  'Dumplings',\n  'Carrot',\n  'Eggs',\n  'Ice cream',\n  'Apple',\n  'Bread',\n  'Fish',\n  'Honey',\n  'Jam',\n  'Garlic',\n];\n\ntype FilterParams = {\n  sortType: SortType,\n  isReversed: boolean,\n};\n\nconst getSortedGoods = (\n  goods: string[],\n  { sortType, isReversed }: FilterParams,\n) => {\n  const preparedGoods = [...goods];\n\n  if (sortType) {\n    preparedGoods.sort((good1: string, good2: string) => {\n      switch (sortType) {\n        case SortType.Length:\n          return good1.length - good2.length;\n\n        case SortType.Alphabet:\n          return good1.localeCompare(good2);\n\n        default:\n          return 0;\n      }\n    });\n  }\n\n  if (isReversed) {\n    preparedGoods.reverse();\n  }\n\n  return preparedGoods;\n};\n\nexport const App: React.FC = () => {\n  const [sortType, setSortType] = useState(SortType.Default);\n  const [isReversed, setIsReversed] = useState(false);\n\n  const sortedGoods = getSortedGoods(\n    goodsFromServer,\n    { sortType, isReversed },\n  );\n\n  return (\n    <div className=\"section content\">\n      <Buttons\n        sortBy={setSortType}\n        onReverse={setIsReversed}\n        sortType={sortType}\n        isReversed={isReversed}\n      />\n\n      <Goods goods={sortedGoods} />\n    </div>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}